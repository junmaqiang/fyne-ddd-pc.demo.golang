name: Build
on:
  push:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
    - uses: actions/checkout@v4

    - name: Set Go version
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

#    - name: Build for Windows
#      run: GOOS=windows GOARCH=amd64 go build -o mypc-windows-amd64.exe
#
#    - name: Build for macOS
#      run: GOOS=darwin GOARCH=amd64 go build -o mypc-darwin-amd64
#
#    - name: Build for Linux
#      run: GOOS=linux GOARCH=amd64 go build -o mypc-linux-amd64

    - name: Build
      run: go build -v ./...

#    - name: Test
#      run: go test -v ./...

#    - name: Create Release
#      id: create_release
#      uses: actions/create-release@v4
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        tag_name: v1.0.0  # 根据您的版本号进行调整
#        release_name: Release v1.0.0  # 发布的名称
#        body: |
#          Description of the release
#        draft: false
#        prerelease: false

#  - name: Show Release Num
#      run: |
#        echo "通过GitHub-Action获取版本号： ${{ env.GITHUB_REF_NAME }}"
#        echo "通过github-slug-action获取版本号： ${{ env.GITHUB_REF_NAME_SLUG }}"
#
#        - uses: wangyoucao577/go-release-action@v1.30
#          with:
#            github_token: ${{ secrets.GITHUB_TOKEN }} # 一个默认的变量，用来实现往 Release 中添加文件
#            goos: ${{ matrix.goos }}
#            goarch: ${{ matrix.goarch }}
#            goversion: 1.18 # 可以指定编译使用的 Golang 版本
#            binary_name: "hello" # 可以指定二进制文件的名称
#            extra_files: LICENSE README.md # 需要包含的额外文件